\begin{frame}[parent={cmap:structural-software-testing},hasnext=true,hasprev=true]
\frametitle{Critérios de teste baseado em complexidade}
\label{concept:complexity-based-test-criterion}

\begin{block:concept}{Definição}
Critérios de teste baseado em complexidade usa informações sobre a complexidade do programa
a fim de obter os requisitos de teste
\end{block:concept}

\begin{block:fact}{Critérios de teste baseado em complexidade}
\begin{itemize}
	\item Um critério de teste baseado em complexidade bem conhecida é
	o critério de McCabe.
\end{itemize}
\end{block:fact}
\end{frame}


\begin{frame}
\label{concept:mccabe-criterion}
\frametitle{Critério baseado em complexidade}
\framesubtitle{Critérios de McCabe}

\begin{block:concept}{Definição}
O critério de McCabe requer um conjunto de caminhos completos linearmente independentes
do grafo de fluxo de controle para ser percorrido na execução do conjunto de teste.
\end{block:concept}

\begin{block:fact}{}
\begin{itemize}
	\item O critério de McCabe usa a complexidade ciclomática para obter o
	conjunto de requisitos de teste;

	\item Satisfazendo o critério de McCabe automaticamente garanteSatisfying McCabe's criterion automatically guarantees both
	decision coverage (All-edges) and statement coverage (All-nodes).
\end{itemize}
\end{block:fact}
\end{frame}



\begin{frame}
\label{procedure:mccabe-criterion}
\frametitle{Complexity-based criterion}
\framesubtitle{McCabe's criterion}

\begin{block:procedure}{}
\begin{enumerate}
	\item Derive the CFG from the software module.
	\item Compute the graph's Cyclomatic Complexity (C).
	\item Select a set of C linearly independent paths.
	\begin{enumerate}
		\item Pick a baseline path (it must be a complete path).
		\begin{enumerate}
			\item This path should be a reasonably typical path of execution
			rather than an exception processing path.

			\item The best choice would be the most important path from the
			tester's viewpoint.
		\end{enumerate}

		\item To choose the next path, change the outcome of the first decision
		along the baseline path while keeping the maximum number of other
		decisions the same as the baseline path.

		\item Generate the remaining paths by varying the remaining decisions,
		one by one.
	\end{enumerate}
	\item Create a test case for each basis path.
\end{enumerate}
\end{block:procedure}


\hfill
\hyperlink{example:mccabe}{\beamerbutton{Example: McCabe's criterion example}}
\end{frame}
