\begin{frame}[parent={cmap:software-testing-foundations}, hasprev=false, hasnext=true]
\frametitle{Test case}
\label{concept:test-case}
\label{concept:input-domain}
\label{concept:output-domain}
\label{concept:input-data}
\label{concept:output-data}

\begin{block:concept}{Definição simplificada}
Um caso de teste é constituído de um par de dados de teste (um conjunto de valores, um para cada variável) para ser os dados de entrada do programa e o resultado esperado.
\end{block:concept}


\begin{block:concept}{A melhor definição}
Um caso de teste é geralmente definido como uma tupla $(d, S(d))$, onde:
\begin{itemize}
	\item $d \in D$ (e $D$ é conjunto de entrada), e;
	\item $S(d)$ representa o resultado esperado para a entrada $d$ de acordo com a especificação $S$.
\end{itemize}
\end{block:concept}

\hfill
\refie{example:sort-test-cases}{\beamerbutton{Example: Casos de teste para um método de ordenação}}
\refie{example:num-zero-test-cases}{\beamerbutton{Example: Casos de teste para o método numZero}}
\end{frame}


\begin{frame}[hasprev=false, hasnext=true]
\frametitle{Test case}
\framesubtitle{Assessing a test case}
\label{concept:test-case-success}
\label{concept:test-case-failure}

\begin{block:fact}{Casos de teste de sucesso}
\begin{itemize}
	\item Primeiro, um caso de teste bem-construido e executado é bem sucedida quando encontra erros.~\cite[p. 7]{myers:2004}

	\item Ele também é bem sucedido quando estabelece eventualmente que não há mais erros que podem ser encontrados (como quando se aplica um critério de teste e satisfaz todos os requitido de teste).
\end{itemize}
\end{block:fact}

\begin{block:fact}{Coasos de teste sem seecusso}
\begin{itemize}
	\item Um caso de teste sem sucesso é o 
\end{itemize}
\end{block:fact}

\hfill
\refie{example:doctor-laboratory-test}{\beamerbutton{Analogy for test cases success and failure}}
\end{frame}



\begin{frame}
\frametitle{Test case}

\begin{block:fact}{Execution order}
\begin{itemize}
    \item There are two styles of test case design regarding order of test
    execution:
	\begin{itemize}
		\item cascading test cases, and
		\item independent test cases.
	\end{itemize}
\end{itemize}
\end{block:fact}
\end{frame}


\begin{frame}
\label{concept:cascading-test-case}
\frametitle{Test case}
\framesubtitle{Cascading test case}

\begin{block:concept}{Definition}
Cascading test cases are test cases that build on each other.
\end{block:concept}


\begin{block:fact}{Advantages and disadvantages}
\begin{itemize}
	\item The advantage of cascading test cases is that each test case is
	typically small and simple.

	\item The disadvantage of cascading test cases is that if one test fails,
	the subsequent tests may be invalid.
\end{itemize}
\end{block:fact}

\hfill
\refie{example:cascading-test-case}{\beamerbutton{Example: Cascading test cases}}
\end{frame}



\begin{frame}[hasprev=true, hasnext=false]
\label{concept:independent-test-case}
\frametitle{Test case}
\framesubtitle{Independent test case}

\begin{block:concept}{Definition}
Independent test cases are entirely self contained.
\begin{itemize}
	\item Independent test cases neither build on each other nor require that
	other tests have been successfully executed.
\end{itemize}
\end{block:concept}

\begin{block:fact}{Advantages and disadvantages}
\begin{itemize}
	\item The advantage of independent test cases is that any number of tests
	can be executed in any order.

	\item The disadvantage of independent test cases is that each test tends to
	be larger and more complex and thus more difficult to design, create, and
	maintain.
\end{itemize}
\end{block:fact}
\end{frame}