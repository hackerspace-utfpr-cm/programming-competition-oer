\begin{frame}[parent={cmap:software-testing-foundations}, hasprev=false, hasnext=true]
\frametitle{Oráculo}

\begin{block:fact}{Está correto?}
\begin{itemize}
	\item Dado um conjunto de condições de entrada e as observações do resultado computacional, quem decide qual é o resultado correto?

	\item Alguém ou alguma coisa deve verificar se o software, para um determinado caso de teste, tem funcionado corretamente.
\end{itemize}
\end{block:fact}
\end{frame}


\begin{frame}[hasprev=true, hasnext=true]
\frametitle{Oráculo}
\label{concept:oráculo}

\begin{block:concept}{Definição}
Um oráculo é qualquer software, processo or dado que fornece o gerador de provas com o resultado esperado de cada caso de teste.
\end{block:concept}

\begin{block:fact}{}
\begin{itemize}
	\item Um oráculo decide se os valores de saída estão correto de acordo com o está especificado.
	\begin{itemize}
		\item Um oráculo é necessário para determinar se a falha foi revelada.
	\end{itemize}

	% TODO: Propose a better classification of oráculos
	\item Alguns exemplos de oráculo: suposição humana (kiddie oráculo), conjunto de teste de regressão, dados avaliados, conjunto de teste adquirido, software existente.
\end{itemize}
\end{block:fact}
\end{frame}



\begin{frame}
\label{concept:kiddie-oráculo}
\frametitle{Oráculo}
\framesubtitle{Kiddie oráculo}

\begin{block:concept}{Definição}
A kiddie oráculo é obtido a partir de executar o software e ver a saída. Se ele se parece com o da direita, ele deve estar certo.
\end{block:concept}

\begin{block:fact}{Por que eu deveria usar um kiddie oráculo?}
\begin{itemize}
	\item Na verdade, você não deve usá-lo, pois é sujeito a erros;

	\item Entretanto, é melhor do que anda.
	\begin{itemize}
		\item E, se o comportamento esperado da aplicação não está documentada, é de responsabilidade do usuário detectar o resultado correto de qualquer maneira.
	\end{itemize}
\end{itemize}
\end{block:fact}

\hfill
\refie{example:kiddie-oráculo}{\beamerbutton{Example: Human guess (kiddie) oráculo}}
\end{frame}



\begin{frame}
\label{concept:regression-test-suite-oráculo}
\frametitle{Oráculo}
\framesubtitle{Regression test suite oráculo}

\begin{block:concept}{Definição}
A regression test suite oráculo  is obtained from running the test case and
comparing the output to the results of the same test cases run against a
previous version of the software.
\end{block:concept}

\begin{block:fact}{Why should I use a regression suite oráculo?}
\begin{itemize}
	\item Regression test ensures that the modified system functions as per
	its specification.

	\item It ensures that old errors will not appear again (or that, at least,
	they will be early detected).
\end{itemize}
\end{block:fact}

\hfill
\refie{example:mozilla-firefox-regression-test-suite-oráculo}{\beamerbutton{Example: Regression test suite oráculo for Mozilla Firefox}}
\end{frame}



\begin{frame}[hasprev=true, hasnext=false]
\label{concept:purchased-test-suite-oráculo}
\frametitle{Oráculo}
\framesubtitle{Purchased test suite oráculo}

\begin{block:concept}{Definição}
A purchased test suite oráculo consists in running the software against a
standardized test suite that has been previously created and validated.
\end{block:concept}

\begin{block:fact}{Why should I use a purchased oráculo?}
\begin{itemize}
	\item Usually it is required that a software passes a test suite oráculo
	in order assess its compliance to a particular technology or standard.

	\item Sometimes its simply easier to buy a test suite instead of developing
	your own.
\end{itemize}
\end{block:fact}


\hfill
\refie{example:java-test-suite-oráculo}{\beamerbutton{Example: Java TCK}}
\end{frame}
