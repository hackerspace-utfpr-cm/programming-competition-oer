\begin{frame}[c,parent={cmap:software-testing}, hasprev=false, hasnext=false]
\frametitle{Teste Funcional}
\label{cmap:functional-testing}

\insertcmap{teste-de-software/teste-funcional/Courses-SoftwareTesting-FunctionalTesting}
\end{frame}



\begin{frame}[parent={cmap:functional-testing}, hasprev=false, hasnext=true]
\frametitle{Teste Funcional}
\label{concept:functional-testing}

\begin{block:concept}{Teste Funcional}
Teste Funcional é uma técnica na qual o teste é baseado unicamente sobre os
requisitos e especificações.
\end{block:concept}

\begin{block:fact}{Teste da caixa-preta}
	\centering
	\includegraphics[width=\textwidth]{resources/Functional testing/Black box testing (no requirements)}
\end{block:fact}
\end{frame}


\begin{frame}[hasprev=true, hasnext=true]
\frametitle{Teste Funcional}
\label{concept:black-box}

\begin{columns}[t]
\column{.6\textwidth}
\begin{block:fact}{Black box}
\begin{itemize}
	\item Teste Funcional considera o produtes em teste como uma caixa:
	\begin{itemize}
		\item Dos quais são conhecidos somente suas entradas e saídas;

		\item Que só pode ser visualizado a partir do seu exterior.
	\end{itemize}

	\item Isso não requer conhecimento do caminho interno, estrutura ou 
	implementação do software.
\end{itemize}
\end{block:fact}

\column{.4\textwidth}
\includegraphics[scale=.3]{resources/Teste Funcional/Black box}
\end{columns}
\end{frame}



\begin{frame}
\frametitle{Teste Funcional}
\framesubtitle{Test phases}

\begin{block:fact}{Test phases}
\begin{itemize}
	\item Teste Funcional can be applied at any of the test phases.

	\item Teste Funcional approach remains the same regardless of the size
	and the input/output complexity of the software (unit, module, subsystem)
	under testing.
\end{itemize}
\end{block:fact}


\begin{block:fact}{Test phases}
\begin{itemize}
	\item Actually, software testing of big software pieces forces the tester
	to use functional testing as there are simply too many paths through the
	software to apply other test techniques.
\end{itemize}
\end{block:fact}
\end{frame}


\begin{frame}
\frametitle{Teste Funcional}
\framesubtitle{Limitations}

\begin{block:fact}{Limitations}
\begin{itemize}
	\item Teste Funcional depends upon good software requirements
	specification.

	\item Teste Funcional is not suitable for testing complex processing
	that requires simple input data.
\end{itemize}
\end{block:fact}
\end{frame}



\begin{frame}[hasprev=true, hasnext=false]
\frametitle{Teste Funcional}

\begin{block:procedure}{Basic steps for functional testing}
\begin{enumerate}
	\item The software requirements are analyzed.
	\begin{itemize}
		\item Valid inputs are chosen based on the software requirements
		to determine that the software processes them correctly.

		\item Invalid inputs must also be chosen to verify that the software
		detects them and handles them properly.
	\end{itemize}

	\item Expected outputs for those inputs are determined.

	\item Test cases are constructed with the selected inputs.

	\item The test cases are run.

	\item Actual outputs are compared with the expected outputs.

	\item A determination is made as to the proper functioning of the software.
\end{enumerate}
\end{block:procedure}
\end{frame}
